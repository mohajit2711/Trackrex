import cv2
from deepface import DeepFace
from tkinter import *
from tkinter import ttk
import webbrowser

root = Tk()
style = ttk.Style()
root.geometry('600x400')
root.configure(background="black")

myLabel1 = Label(root, text="Confused about what to do? Get started with", font=("Courier", 15), fg='white', bg='black')
myLabel1.pack(padx=20, pady=1)
myLabel2 = Label(root, text="TRAKREX", font=("Arial", 40), fg='#5c007d', bg='black')
myLabel2.pack(padx=20, pady=10)
myLabel3 = Label(root, text=' "The cure for boredom is curiosity." - Dorothy Parker', font=("Monotype Corsiva", 20),fg='white', bg='black')

def OpenUrl():
   webbrowser.open('https://trakrexx.wixsite.com/home/about-us')

def QuitBtn():
    root.destroy()

def run():
   # faceCascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
   faceCascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

   cap = cv2.VideoCapture(1)
   # Check if the webcam is opened correctly
   if not cap.isOpened():
       cap = cv2.VideoCapture(0)

   if not cap.isOpened():
       raise IOError("Cannot open webcam")

   while True:
       ret, frame = cap.read()  ## read one image from a video

       result = DeepFace.analyze(frame, actions=['emotion'], enforce_detection=False)
       gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

       # print (faceCascade.empty())
       faces = faceCascade.detectMultiScale(gray, 1.1, 4)

       # Draw a rectangle around the faces
       for (x, y, w, h) in faces:
           cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

       font = cv2.FONT_HERSHEY_SIMPLEX

       # Use putText() method for
       # inserting text on video
       cv2.putText(frame,
                   result['dominant_emotion'],
                   (50, 50),
                   font, 3,
                   (0, 0, 255),
                   2,
                   cv2.LINE_4)
       cv2.imshow('Original video', frame)

       dominant_emotion = result['dominant_emotion']

       if cv2.waitKey(2) & 0xFF == ord('q'):
           if dominant_emotion == 'neutral':
               webbrowser.open("https://trakrexx.wixsite.com/neutrality")
           if dominant_emotion == 'happy':
               webbrowser.open("https://trakrexx.wixsite.com/happiness")
           if dominant_emotion == 'sad':
               webbrowser.open("https://trakrexx.wixsite.com/sadness")
           if dominant_emotion == 'angry':
               webbrowser.open("https://trakrexx.wixsite.com/anger")
           break

   cap.release()
   cv2.destroyAllWindows()


Getstarted = Button(root, text="I'm feeling lucky!", borderwidth=0, height=2, width=18, bg='white', fg='#7F14B1', font='Arial', command=run)
Quit = Button(root, text="Quit", borderwidth=0,  bg='white', height=2, width=10, fg='#000AFF', font='Arial', command=QuitBtn)
AboutUs = Button(root, text="About Us", borderwidth=0, bg='#00FFD1', width=15, height=2, font='Arial', command=OpenUrl)

Getstarted.pack(padx=20, pady=15)
Quit.pack(pady=15)
myLabel3.pack(padx=20, pady=10)
AboutUs.pack(padx=20, pady=10)

root.mainloop()  # making loop to make it run continuously
